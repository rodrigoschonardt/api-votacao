services:
  postgres:
    image: postgres:15-alpine
    container_name: voting-postgres
    environment:
      POSTGRES_DB: votacao-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/install.ddl:/docker-entrypoint-initdb.d/schema.sql
    ports:
      - "5432:5432"
    networks:
      - voting-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d votacao-db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  voting-api:
    # image: rodrigoschonardt/votingapi-arm64 - processador arm
    image: rodrigoschonardt/votingapi-amd64
    container_name: voting-api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/votacao-db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SERVER_PORT: 8080
      TZ: America/Sao_Paulo
      JAVA_OPTS: "-Duser.timezone=America/Sao_Paulo"
    ports:
      - "8080:8080"
    networks:
      - voting-network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  voting-network:
    driver: bridge